doctype html
html
  head
    title codedots
    link media="all" rel="stylesheet" href="scss/style.css"
    script src="js/jquery/dist/jquery.min.js"
    script src="js/d3/d3.min.js"
    script src="js/canvg/dist/canvg.bundle.min.js"
    script src="js/canvg/dist/canvg.min.js"
    script src="js/FileSaver/FileSaver.min.js"
    script src="js/canvas-toBlob.js/canvas-toBlob.js"

  body
    .container
      button id="button"
        |ダウンロード
      #svg
      canvas id="canvas" width="130px" height="130px" style="background-color:#fff"

  javascript:
    var width = 960,
            height = 960,
            cellSize = 0,
            format = d3.time.format("%Y-%m-%d");

    var colors = ['#ff0000', '#00ffff', '#ff8000', '#0080ff', '#ffff00', '#0000ff', '#80ff00', '#8000ff', '#00ff00', '#ff00ff', '#00ff80', '#ff0080'];
    var barPadding = 12;
    var dotNum = 10000;
    var dotRoot = Math.sqrt(dotNum);
    var datasets = new Array(dotNum);

    var svg = d3.select("#svg")
            .append("svg")
            .attr("width", width)
            .attr("height", height);

    var rect = svg.selectAll("circle")
            .data(datasets)
            .enter()
            .append("circle")
            .attr("cx", function (d, i) {
              var col = Math.floor(i / dotRoot);
              return col * cellSize + (col + 1) * barPadding;
            })
            .attr("cy", function (d, i) {
              var row = i % dotRoot;
              return row * cellSize + (row + 1) * barPadding;
            })
            .attr("r", cellSize)
            .attr("width", cellSize)
            .attr("height", cellSize)
            .attr("class", function (d, i) {
              return 'cell';
            })
            .attr("style", function (d, i) {
              return 'fill: ' + colors[Math.floor(Math.random() * colors.length)];
            })
            .transition()
            .delay(function(d, i) {
              return i * 1;
            })
            .duration(function (d, i) {
              return 500;
            })
            .attr("r", function(d) {
              return 4;
            });

    $('#button').click(function() {
      downloadImage();
      /*
      var svgText = $('#svg')[0].innerHTML;
      canvg('canvas', svgText);
      document.getElementById('canvas').toDataURL();
      $('#result').append('<a href="' + document.getElementById('canvas').toDataURL() + '">ダウンロード</a>');
      */
    });
    function downloadImage() {
      var svgText = $('#svg')[0].innerHTML;
      canvg('canvas', svgText);
      var canvas = document.getElementById('canvas');
      canvas.toBlob(function (blob) {
        saveAs(blob, "code.png");
      }, "image/png");
    }